effect reader {
	fun read(mut buf []u8) usize
}

fun read_bytes(bytes []u8) impl reader {
	mut current usize = 0
	move {
		buf ->

		let remaining = len(bytes) - current
		let amnt = if len(buf) < remaining { len(buf) } else { remaining }

		for(range(0, amnt)) {
			i ->
			buf[i] = bytes[current + i]
		}

		current = current + amnt
		amnt
	}
}

fun skip_line() usize / reader {
	mut total usize = 0

	mut buf []u8 = [---]
	try loop {
		let read = read(buf)
		if read == 0 {
			break
		}

		do total++
		if buf[0] == '\n' {
			break
		}
	}

	total
}

fun read_line(mut buf []u8) usize / reader {
	mut total usize = 0

	try loop {
		let read = read(buf[total..total + 1])
		if read == 0 {
			break
		}

		if buf[total++] == '\n' {
			break
		}
		if total == len(buf) {
			break
		}
	}

	total
}
