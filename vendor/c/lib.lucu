import "core:"
import "core:mem"

##
# libc, defined as an effect
# every header file in libc is its own effect
# this is a compound effect that contains all of them
##
@foreign
effect lib {
	fun time(t ?^time_t) time_t

	fun puts(s string) int
	fun strlen(s string) size_t

	fun malloc(size size_t) ?^max_align_t
	fun free(ptr ?^max_align_t)
}

# opaque types
struct time_t      (_timestamp int)
struct max_align_t (_ int)

# type aliases
type string = ^const u8
type int    = core.i32
type size_t = core.usize

@capability
fun link() impl lib / foreign {
	impl_link("c")
}

fun allocator() impl mem.alloc / lib {
	impl mem.alloc {
		fun raw_alloc(len usize, align u8) ?^u8 {
			cast malloc(len)
		}
		fun raw_free(buf []u8, align u8) {
			free(cast &buf[0])
		}
	}
}
