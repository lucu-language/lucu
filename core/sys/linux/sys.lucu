##
# system effect for linux
##
effect sys {
	fun read(fd int, buf []u8) usize
	fun write(fd int, buf []const u8) usize

	fun exit(code int) !
	fun tkill(tid int, sig int) int

	fun set_tid_address(tidptr ^int) int
}

fun reg(ptr ?^const `t) int {
	cast ((cast ptr) as uptr)
}

# TODO:
# the syscall numbers here differ between linux platforms
# these are specifically for x86_64

@capability(os = "linux")
fun link() impl sys / foreign {
	impl sys {
		fun read(fd int, buf []u8) usize {
			cast syscall(0, [fd, reg(&buf[0]), cast len(buf)])
		}
		fun write(fd int, buf []const u8) usize {
			cast syscall(1, [fd, reg(&buf[0]), cast len(buf)])
		}
		fun exit(code int) ! {
			do syscall(60, [code])
			unreachable()
		}
		fun tkill(pid int, sig int) int {
			syscall(200, [pid, sig])
		}
		fun set_tid_address(tidptr ^int) int {
			syscall(218, [reg(tidptr)])
		}
	}
}
