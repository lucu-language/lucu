effect striter {
	fun next() str
}

effect strbuf {
	fun push(elem str) int
	fun get(index int) str
	fun iter() striter fails
}

fun array_buffer() strbuf {
	mut array [255]str = ---
	mut size  int      = 0
	handle strbuf {
		fun push(elem str) int {
			array[size] = elem
			size++
		}
		fun get(index int) str {
			array[index]
		}
		fun iter() striter fails {
			mut current = 0
			handle striter fails {
				fun next() str {
					if current < size {
						array[current++]
					} else {
						fail
					}
				}
			}
		}
	}
}

fun println_buffered(index int) / debug strbuf {
	putstr(get(index))
	putstr("\n")
}

fun main() / debug {
	with array_buffer() {
		let b = push("world")
		let a = push("Hello")
		println_buffered(a)
		println_buffered(b)

		with strbuf.iter() {
			loop {
				putstr(next())
				putstr("\n")
			}
		}
	}
}
