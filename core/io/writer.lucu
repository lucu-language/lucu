effect writer {
	fun write(buf []u8) usize
	fun flush()
}

fun write_int(n int) / writer {
	mut buf [20]u8 = ---

	mut current usize = 20
	mut remaining = n

	try loop {
		let digit = '0' + cast mod(remaining, 10)
		remaining = remaining / 10

		current = current - 1
		buf[current] = digit

		if remaining == 0 {
			break()
		}
	}

	write(buf[current..20]);
}

fun buffer_writes(mut buffer []u8) handle writer / writer {
	let super = writer

	mut buffer = buffer
	mut current usize = 0

	handle writer {
		fun write(buf []u8) usize {
			for(0, len(buf)) { i ->
				if current == len(buffer) {
					write(buffer) with super
					current = 0
				}
				buffer[current++] = buf[i]
			}
			len(buf)
		}
		fun flush() {
			write(buffer[0 .. current]) with super
			flush()                     with super
			current = 0
		}
	}
}
