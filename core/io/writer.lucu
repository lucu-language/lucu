effect writer {
	fun write(buf []u8) usize
}

fun write_bytes(mut bytes []u8) impl writer {
	mut current usize = 0
	move {
		buf ->

		let remaining = len(bytes) - current
		let amnt = if len(buf) < remaining { len(buf) } else { remaining }

		for(range(0, amnt)) {
			i ->
			bytes[i + current] = buf[i]
		}

		current = current + amnt
		amnt
	}
}

fun write_int(n int) usize / writer {
	mut buf [20]u8 = ---

	mut current usize = 20
	mut remaining = n

	try loop {
		let digit u8 = '0' + cast mod(remaining, 10)
		remaining = remaining / 10

		current = current - 1
		buf[current] = digit

		if remaining == 0 {
			break
		}
	}

	write(buf[current..20])
}
